#include <linux/fb.h>
#include <sys/ioctl.h>
#include <stdio.h>
#include <termios.h>
#include <string.h>
#include <limits.h>
#include <time.h>
#include <sys/time.h>
#include <stdlib.h>
#include <fcntl.h>
#include <sys/mman.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <math.h>

#define FONTDATAMAX 2048
#define PI 3.1415927
struct arrayMaps{
	int w;
	int h;
	int bits;
};

struct control{
int x;
int y;
int w;
int h;
};

struct label{
control c;
char caption[100];
char r;
char g;
char b;
};

struct button{
control c;
char caption[100];
char r;
char g;
char b;
void (*onClick)();
};

struct menus{
control c;
char caption[100];
char r;
char g;
char b;
void (*onClick)(int index);
}mainMenu[32];


struct textBar{
control c;
char caption[100];
char color;
char bcolor;
};


void TputImage(int x,int y, int *img,char tr,char tg,char tb);
void Ipixel16(int x,int y,int *img,int color);
void IputImage(int x,int y, int *img, int *img2);
void IcopyImage(int x,int y, int *img, int *img2);
void ifffill(int x,int y,int *img,char rc,char gc,char bc);
int igpixel(int x,int y,int *img);
int startX();
void icircle(int xx,int yy ,int rr,int *img,char rcc,char gcc, char bcc);
void ioutSide(int y,int *img);
void iball(int xx,int yy ,int rr,int *img,char rc,char gc,char bcc);
void ivline(int x,int y,int y2,int *img,char r,char g,char b);
void ilineR(int x,int y,int x2,int y2,int *img,char r,char g,char bc);
void ilineL(int x,int y,int x2,int y2,int *img,char r,char g,char bc);
void iline(int x,int y,int x2,int y2,int *img,char r,char g,char b);
void outSide(int y);
void centerControl (control *c,int tw,int th);
void drawLabel(label l);
int textW(char *caption);
void poligan(int *p,int size,char r,char g,char b);
void fillPolygan(int x,int y,int r,int division,char rr,char gg,char bb);
void poly(int xx,int yy ,int rr,int divisions,int *p);
void fffill(int x,int y,char r,char g,char b);
void ppixel16(int x, int y,int color);
int RGBC(char r,char g,char b);
void ppixel16(int x, int y,int color);
void iboxs(int x,int y,int x2,int y2,int *img,char r,char g,char b);
void ihline(int x, int y,int x2,int *img,char r,char g,char b);
void putImage(int x,int y, int *img);
void Ipixel(int x,int y,int *img,char r,char g,char b);
int *creatImage(int w,int h);
void circle(int xx,int yy ,int rr,char rcc,char gcc, char bcc);
void endX(int fbfd);
void grid (control c,int steep,char r,char g,char b);
void ppixel(int x, int y,char r,char g,char b);
void hline(int x, int y,int x2,char r,char g,char b);
void boxs(int x,int y,int x2,int y2,char r,char g,char b);
void gputc(int x,int y,char r,char g,char b,char c);
void gputs(int x,int y,char r,char g,char b,char *c);
void ball(int xx,int yy ,int rr,char r,char g,char b);
void lineR(int x,int y,int x2,int y2,char r,char g,char b);
void lineL(int x,int y,int x2,int y2,char r,char g,char b);
void rectangle(int x,int y,int x2,int y2,char r,char g,char b);
void line(int x,int y,int x2,int y2,char r,char g,char b);
void grid (control c,int steep,char r,char g,char b);
int gpixel(int x,int y);
void copyImage(int x,int y, int *img);
int Igpixel(int x,int y,int *img,char *r,char *g,char *b);


    struct fb_var_screeninfo vinfo;
    struct fb_fix_screeninfo finfo;
    long int screensize = 0;
    char *fbp = 0;
    long int location = 0;
int left=0,middle=0,right=0,mouseX=0,mouseY=0;
int MOUSEfile=0;
struct termios oldt;
char trun[]="exo-open --launch TerminalEmulator ";
int *oldIMAGE;


unsigned char font8x8[FONTDATAMAX] = {



        /* 0 0x00 '^@' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 1 0x01 '^A' */

        0x7e, /* 01111110 */

        0x81, /* 10000001 */

        0xa5, /* 10100101 */

        0x81, /* 10000001 */

        0xbd, /* 10111101 */

        0x99, /* 10011001 */

        0x81, /* 10000001 */

        0x7e, /* 01111110 */



        /* 2 0x02 '^B' */

        0x7e, /* 01111110 */

        0xff, /* 11111111 */

        0xdb, /* 11011011 */

        0xff, /* 11111111 */

        0xc3, /* 11000011 */

        0xe7, /* 11100111 */

        0xff, /* 11111111 */

        0x7e, /* 01111110 */



        /* 3 0x03 '^C' */

        0x6c, /* 01101100 */

        0xfe, /* 11111110 */

        0xfe, /* 11111110 */

        0xfe, /* 11111110 */

        0x7c, /* 01111100 */

        0x38, /* 00111000 */

        0x10, /* 00010000 */

        0x00, /* 00000000 */



        /* 4 0x04 '^D' */

        0x10, /* 00010000 */

        0x38, /* 00111000 */

        0x7c, /* 01111100 */

        0xfe, /* 11111110 */

        0x7c, /* 01111100 */

        0x38, /* 00111000 */

        0x10, /* 00010000 */

        0x00, /* 00000000 */



        /* 5 0x05 '^E' */

        0x38, /* 00111000 */

        0x7c, /* 01111100 */

        0x38, /* 00111000 */

        0xfe, /* 11111110 */

        0xfe, /* 11111110 */

        0xd6, /* 11010110 */

        0x10, /* 00010000 */

        0x38, /* 00111000 */



        /* 6 0x06 '^F' */

        0x10, /* 00010000 */

        0x38, /* 00111000 */

        0x7c, /* 01111100 */

        0xfe, /* 11111110 */

        0xfe, /* 11111110 */

        0x7c, /* 01111100 */

        0x10, /* 00010000 */

        0x38, /* 00111000 */



        /* 7 0x07 '^G' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x3c, /* 00111100 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 8 0x08 '^H' */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0xe7, /* 11100111 */

        0xc3, /* 11000011 */

        0xc3, /* 11000011 */

        0xe7, /* 11100111 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */



        /* 9 0x09 '^I' */

        0x00, /* 00000000 */

        0x3c, /* 00111100 */

        0x66, /* 01100110 */

        0x42, /* 01000010 */

        0x42, /* 01000010 */

        0x66, /* 01100110 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 10 0x0a '^J' */

        0xff, /* 11111111 */

        0xc3, /* 11000011 */

        0x99, /* 10011001 */

        0xbd, /* 10111101 */

        0xbd, /* 10111101 */

        0x99, /* 10011001 */

        0xc3, /* 11000011 */

        0xff, /* 11111111 */



        /* 11 0x0b '^K' */

        0x0f, /* 00001111 */

        0x07, /* 00000111 */

        0x0f, /* 00001111 */

        0x7d, /* 01111101 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0x78, /* 01111000 */



        /* 12 0x0c '^L' */

        0x3c, /* 00111100 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x3c, /* 00111100 */

        0x18, /* 00011000 */

        0x7e, /* 01111110 */

        0x18, /* 00011000 */



        /* 13 0x0d '^M' */

        0x3f, /* 00111111 */

        0x33, /* 00110011 */

        0x3f, /* 00111111 */

        0x30, /* 00110000 */

        0x30, /* 00110000 */

        0x70, /* 01110000 */

        0xf0, /* 11110000 */

        0xe0, /* 11100000 */



        /* 14 0x0e '^N' */

        0x7f, /* 01111111 */

        0x63, /* 01100011 */

        0x7f, /* 01111111 */

        0x63, /* 01100011 */

        0x63, /* 01100011 */

        0x67, /* 01100111 */

        0xe6, /* 11100110 */

        0xc0, /* 11000000 */



        /* 15 0x0f '^O' */

        0x18, /* 00011000 */

        0xdb, /* 11011011 */

        0x3c, /* 00111100 */

        0xe7, /* 11100111 */

        0xe7, /* 11100111 */

        0x3c, /* 00111100 */

        0xdb, /* 11011011 */

        0x18, /* 00011000 */



        /* 16 0x10 '^P' */

        0x80, /* 10000000 */

        0xe0, /* 11100000 */

        0xf8, /* 11111000 */

        0xfe, /* 11111110 */

        0xf8, /* 11111000 */

        0xe0, /* 11100000 */

        0x80, /* 10000000 */

        0x00, /* 00000000 */



        /* 17 0x11 '^Q' */

        0x02, /* 00000010 */

        0x0e, /* 00001110 */

        0x3e, /* 00111110 */

        0xfe, /* 11111110 */

        0x3e, /* 00111110 */

        0x0e, /* 00001110 */

        0x02, /* 00000010 */

        0x00, /* 00000000 */



        /* 18 0x12 '^R' */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x7e, /* 01111110 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x7e, /* 01111110 */

        0x3c, /* 00111100 */

        0x18, /* 00011000 */



        /* 19 0x13 '^S' */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x00, /* 00000000 */

        0x66, /* 01100110 */

        0x00, /* 00000000 */



        /* 20 0x14 '^T' */

        0x7f, /* 01111111 */

        0xdb, /* 11011011 */

        0xdb, /* 11011011 */

        0x7b, /* 01111011 */

        0x1b, /* 00011011 */

        0x1b, /* 00011011 */

        0x1b, /* 00011011 */

        0x00, /* 00000000 */



        /* 21 0x15 '^U' */

        0x3e, /* 00111110 */

        0x61, /* 01100001 */

        0x3c, /* 00111100 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x3c, /* 00111100 */

        0x86, /* 10000110 */

        0x7c, /* 01111100 */



        /* 22 0x16 '^V' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0x7e, /* 01111110 */

        0x7e, /* 01111110 */

        0x00, /* 00000000 */



        /* 23 0x17 '^W' */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x7e, /* 01111110 */

        0x18, /* 00011000 */

        0x7e, /* 01111110 */

        0x3c, /* 00111100 */

        0x18, /* 00011000 */

        0xff, /* 11111111 */



        /* 24 0x18 '^X' */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x7e, /* 01111110 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */



        /* 25 0x19 '^Y' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x7e, /* 01111110 */

        0x3c, /* 00111100 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */



        /* 26 0x1a '^Z' */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x0c, /* 00001100 */

        0xfe, /* 11111110 */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 27 0x1b '^[' */

        0x00, /* 00000000 */

        0x30, /* 00110000 */

        0x60, /* 01100000 */

        0xfe, /* 11111110 */

        0x60, /* 01100000 */

        0x30, /* 00110000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 28 0x1c '^\' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0xfe, /* 11111110 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 29 0x1d '^]' */

        0x00, /* 00000000 */

        0x24, /* 00100100 */

        0x66, /* 01100110 */

        0xff, /* 11111111 */

        0x66, /* 01100110 */

        0x24, /* 00100100 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 30 0x1e '^^' */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x7e, /* 01111110 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 31 0x1f '^_' */

        0x00, /* 00000000 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0x7e, /* 01111110 */

        0x3c, /* 00111100 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 32 0x20 ' ' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 33 0x21 '!' */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x3c, /* 00111100 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */



        /* 34 0x22 '"' */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x24, /* 00100100 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 35 0x23 '#' */

        0x6c, /* 01101100 */

        0x6c, /* 01101100 */

        0xfe, /* 11111110 */

        0x6c, /* 01101100 */

        0xfe, /* 11111110 */

        0x6c, /* 01101100 */

        0x6c, /* 01101100 */

        0x00, /* 00000000 */



        /* 36 0x24 '$' */

        0x18, /* 00011000 */

        0x3e, /* 00111110 */

        0x60, /* 01100000 */

        0x3c, /* 00111100 */

        0x06, /* 00000110 */

        0x7c, /* 01111100 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */



        /* 37 0x25 '%' */

        0x00, /* 00000000 */

        0xc6, /* 11000110 */

        0xcc, /* 11001100 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0x66, /* 01100110 */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */



        /* 38 0x26 '&' */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0x38, /* 00111000 */

        0x76, /* 01110110 */

        0xdc, /* 11011100 */

        0xcc, /* 11001100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 39 0x27 ''' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 40 0x28 '(' */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0x30, /* 00110000 */

        0x30, /* 00110000 */

        0x18, /* 00011000 */

        0x0c, /* 00001100 */

        0x00, /* 00000000 */



        /* 41 0x29 ')' */

        0x30, /* 00110000 */

        0x18, /* 00011000 */

        0x0c, /* 00001100 */

        0x0c, /* 00001100 */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0x00, /* 00000000 */



        /* 42 0x2a '*' */

        0x00, /* 00000000 */

        0x66, /* 01100110 */

        0x3c, /* 00111100 */

        0xff, /* 11111111 */

        0x3c, /* 00111100 */

        0x66, /* 01100110 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 43 0x2b '+' */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x7e, /* 01111110 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 44 0x2c ',' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */



        /* 45 0x2d '-' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 46 0x2e '.' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */



        /* 47 0x2f '/' */

        0x06, /* 00000110 */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0x60, /* 01100000 */

        0xc0, /* 11000000 */

        0x80, /* 10000000 */

        0x00, /* 00000000 */



        /* 48 0x30 '' */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0xc6, /* 11000110 */

        0xd6, /* 11010110 */

        0xc6, /* 11000110 */

        0x6c, /* 01101100 */

        0x38, /* 00111000 */

        0x00, /* 00000000 */



        /* 49 0x31 '1' */

        0x18, /* 00011000 */

        0x38, /* 00111000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x7e, /* 01111110 */

        0x00, /* 00000000 */



        /* 50 0x32 '2' */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0x06, /* 00000110 */

        0x1c, /* 00011100 */

        0x30, /* 00110000 */

        0x66, /* 01100110 */

        0xfe, /* 11111110 */

        0x00, /* 00000000 */



        /* 51 0x33 '3' */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0x06, /* 00000110 */

        0x3c, /* 00111100 */

        0x06, /* 00000110 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 52 0x34 '4' */

        0x1c, /* 00011100 */

        0x3c, /* 00111100 */

        0x6c, /* 01101100 */

        0xcc, /* 11001100 */

        0xfe, /* 11111110 */

        0x0c, /* 00001100 */

        0x1e, /* 00011110 */

        0x00, /* 00000000 */



        /* 53 0x35 '5' */

        0xfe, /* 11111110 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0xfc, /* 11111100 */

        0x06, /* 00000110 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 54 0x36 '6' */

        0x38, /* 00111000 */

        0x60, /* 01100000 */

        0xc0, /* 11000000 */

        0xfc, /* 11111100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 55 0x37 '7' */

        0xfe, /* 11111110 */

        0xc6, /* 11000110 */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0x30, /* 00110000 */

        0x30, /* 00110000 */

        0x00, /* 00000000 */



        /* 56 0x38 '8' */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 57 0x39 '9' */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7e, /* 01111110 */

        0x06, /* 00000110 */

        0x0c, /* 00001100 */

        0x78, /* 01111000 */

        0x00, /* 00000000 */



        /* 58 0x3a ':' */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */



        /* 59 0x3b ';' */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */



        /* 60 0x3c '<' */

        0x06, /* 00000110 */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0x18, /* 00011000 */

        0x0c, /* 00001100 */

        0x06, /* 00000110 */

        0x00, /* 00000000 */



        /* 61 0x3d '=' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 62 0x3e '>' */

        0x60, /* 01100000 */

        0x30, /* 00110000 */

        0x18, /* 00011000 */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0x60, /* 01100000 */

        0x00, /* 00000000 */



        /* 63 0x3f '?' */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */



        /* 64 0x40 '@' */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xde, /* 11011110 */

        0xde, /* 11011110 */

        0xde, /* 11011110 */

        0xc0, /* 11000000 */

        0x78, /* 01111000 */

        0x00, /* 00000000 */



        /* 65 0x41 'A' */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0xc6, /* 11000110 */

        0xfe, /* 11111110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */



        /* 66 0x42 'B' */

        0xfc, /* 11111100 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x7c, /* 01111100 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0xfc, /* 11111100 */

        0x00, /* 00000000 */



        /* 67 0x43 'C' */

        0x3c, /* 00111100 */

        0x66, /* 01100110 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0x66, /* 01100110 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 68 0x44 'D' */

        0xf8, /* 11111000 */

        0x6c, /* 01101100 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x6c, /* 01101100 */

        0xf8, /* 11111000 */

        0x00, /* 00000000 */



        /* 69 0x45 'E' */

        0xfe, /* 11111110 */

        0x62, /* 01100010 */

        0x68, /* 01101000 */

        0x78, /* 01111000 */

        0x68, /* 01101000 */

        0x62, /* 01100010 */

        0xfe, /* 11111110 */

        0x00, /* 00000000 */



        /* 70 0x46 'F' */

        0xfe, /* 11111110 */

        0x62, /* 01100010 */

        0x68, /* 01101000 */

        0x78, /* 01111000 */

        0x68, /* 01101000 */

        0x60, /* 01100000 */

        0xf0, /* 11110000 */

        0x00, /* 00000000 */



        /* 71 0x47 'G' */

        0x3c, /* 00111100 */

        0x66, /* 01100110 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0xce, /* 11001110 */

        0x66, /* 01100110 */

        0x3a, /* 00111010 */

        0x00, /* 00000000 */



        /* 72 0x48 'H' */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xfe, /* 11111110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */



        /* 73 0x49 'I' */

        0x3c, /* 00111100 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 74 0x4a 'J' */

        0x1e, /* 00011110 */

        0x0c, /* 00001100 */

        0x0c, /* 00001100 */

        0x0c, /* 00001100 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0x78, /* 01111000 */

        0x00, /* 00000000 */



        /* 75 0x4b 'K' */

        0xe6, /* 11100110 */

        0x66, /* 01100110 */

        0x6c, /* 01101100 */

        0x78, /* 01111000 */

        0x6c, /* 01101100 */

        0x66, /* 01100110 */

        0xe6, /* 11100110 */

        0x00, /* 00000000 */



        /* 76 0x4c 'L' */

        0xf0, /* 11110000 */

        0x60, /* 01100000 */

        0x60, /* 01100000 */

        0x60, /* 01100000 */

        0x62, /* 01100010 */

        0x66, /* 01100110 */

        0xfe, /* 11111110 */

        0x00, /* 00000000 */



        /* 77 0x4d 'M' */

        0xc6, /* 11000110 */

        0xee, /* 11101110 */

        0xfe, /* 11111110 */

        0xfe, /* 11111110 */

        0xd6, /* 11010110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */



        /* 78 0x4e 'N' */

        0xc6, /* 11000110 */

        0xe6, /* 11100110 */

        0xf6, /* 11110110 */

        0xde, /* 11011110 */

        0xce, /* 11001110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */



        /* 79 0x4f 'O' */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 80 0x50 'P' */

        0xfc, /* 11111100 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x7c, /* 01111100 */

        0x60, /* 01100000 */

        0x60, /* 01100000 */

        0xf0, /* 11110000 */

        0x00, /* 00000000 */



        /* 81 0x51 'Q' */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xce, /* 11001110 */

        0x7c, /* 01111100 */

        0x0e, /* 00001110 */



        /* 82 0x52 'R' */

        0xfc, /* 11111100 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x7c, /* 01111100 */

        0x6c, /* 01101100 */

        0x66, /* 01100110 */

        0xe6, /* 11100110 */

        0x00, /* 00000000 */



        /* 83 0x53 'S' */

        0x3c, /* 00111100 */

        0x66, /* 01100110 */

        0x30, /* 00110000 */

        0x18, /* 00011000 */

        0x0c, /* 00001100 */

        0x66, /* 01100110 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 84 0x54 'T' */

        0x7e, /* 01111110 */

        0x7e, /* 01111110 */

        0x5a, /* 01011010 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 85 0x55 'U' */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 86 0x56 'V' */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x6c, /* 01101100 */

        0x38, /* 00111000 */

        0x00, /* 00000000 */



        /* 87 0x57 'W' */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xd6, /* 11010110 */

        0xd6, /* 11010110 */

        0xfe, /* 11111110 */

        0x6c, /* 01101100 */

        0x00, /* 00000000 */



        /* 88 0x58 'X' */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x6c, /* 01101100 */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */



        /* 89 0x59 'Y' */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x3c, /* 00111100 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 90 0x5a 'Z' */

        0xfe, /* 11111110 */

        0xc6, /* 11000110 */

        0x8c, /* 10001100 */

        0x18, /* 00011000 */

        0x32, /* 00110010 */

        0x66, /* 01100110 */

        0xfe, /* 11111110 */

        0x00, /* 00000000 */



        /* 91 0x5b '[' */

        0x3c, /* 00111100 */

        0x30, /* 00110000 */

        0x30, /* 00110000 */

        0x30, /* 00110000 */

        0x30, /* 00110000 */

        0x30, /* 00110000 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 92 0x5c '\' */

        0xc0, /* 11000000 */

        0x60, /* 01100000 */

        0x30, /* 00110000 */

        0x18, /* 00011000 */

        0x0c, /* 00001100 */

        0x06, /* 00000110 */

        0x02, /* 00000010 */

        0x00, /* 00000000 */



        /* 93 0x5d ']' */

        0x3c, /* 00111100 */

        0x0c, /* 00001100 */

        0x0c, /* 00001100 */

        0x0c, /* 00001100 */

        0x0c, /* 00001100 */

        0x0c, /* 00001100 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 94 0x5e '^' */

        0x10, /* 00010000 */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 95 0x5f '_' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xff, /* 11111111 */



        /* 96 0x60 '`' */

        0x30, /* 00110000 */

        0x18, /* 00011000 */

        0x0c, /* 00001100 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 97 0x61 'a' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x78, /* 01111000 */

        0x0c, /* 00001100 */

        0x7c, /* 01111100 */

        0xcc, /* 11001100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 98 0x62 'b' */

        0xe0, /* 11100000 */

        0x60, /* 01100000 */

        0x7c, /* 01111100 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0xdc, /* 11011100 */

        0x00, /* 00000000 */



        /* 99 0x63 'c' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xc0, /* 11000000 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 100 0x64 'd' */

        0x1c, /* 00011100 */

        0x0c, /* 00001100 */

        0x7c, /* 01111100 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 101 0x65 'e' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xfe, /* 11111110 */

        0xc0, /* 11000000 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 102 0x66 'f' */

        0x3c, /* 00111100 */

        0x66, /* 01100110 */

        0x60, /* 01100000 */

        0xf8, /* 11111000 */

        0x60, /* 01100000 */

        0x60, /* 01100000 */

        0xf0, /* 11110000 */

        0x00, /* 00000000 */



        /* 103 0x67 'g' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x76, /* 01110110 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0x7c, /* 01111100 */

        0x0c, /* 00001100 */

        0xf8, /* 11111000 */



        /* 104 0x68 'h' */

        0xe0, /* 11100000 */

        0x60, /* 01100000 */

        0x6c, /* 01101100 */

        0x76, /* 01110110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0xe6, /* 11100110 */

        0x00, /* 00000000 */



        /* 105 0x69 'i' */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x38, /* 00111000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 106 0x6a 'j' */

        0x06, /* 00000110 */

        0x00, /* 00000000 */

        0x06, /* 00000110 */

        0x06, /* 00000110 */

        0x06, /* 00000110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x3c, /* 00111100 */



        /* 107 0x6b 'k' */

        0xe0, /* 11100000 */

        0x60, /* 01100000 */

        0x66, /* 01100110 */

        0x6c, /* 01101100 */

        0x78, /* 01111000 */

        0x6c, /* 01101100 */

        0xe6, /* 11100110 */

        0x00, /* 00000000 */



        /* 108 0x6c 'l' */

        0x38, /* 00111000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 109 0x6d 'm' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xec, /* 11101100 */

        0xfe, /* 11111110 */

        0xd6, /* 11010110 */

        0xd6, /* 11010110 */

        0xd6, /* 11010110 */

        0x00, /* 00000000 */



        /* 110 0x6e 'n' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xdc, /* 11011100 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x00, /* 00000000 */



        /* 111 0x6f 'o' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 112 0x70 'p' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xdc, /* 11011100 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x7c, /* 01111100 */

        0x60, /* 01100000 */

        0xf0, /* 11110000 */



        /* 113 0x71 'q' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x76, /* 01110110 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0x7c, /* 01111100 */

        0x0c, /* 00001100 */

        0x1e, /* 00011110 */



        /* 114 0x72 'r' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xdc, /* 11011100 */

        0x76, /* 01110110 */

        0x60, /* 01100000 */

        0x60, /* 01100000 */

        0xf0, /* 11110000 */

        0x00, /* 00000000 */



        /* 115 0x73 's' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0xc0, /* 11000000 */

        0x7c, /* 01111100 */

        0x06, /* 00000110 */

        0xfc, /* 11111100 */

        0x00, /* 00000000 */



        /* 116 0x74 't' */

        0x30, /* 00110000 */

        0x30, /* 00110000 */

        0xfc, /* 11111100 */

        0x30, /* 00110000 */

        0x30, /* 00110000 */

        0x36, /* 00110110 */

        0x1c, /* 00011100 */

        0x00, /* 00000000 */



        /* 117 0x75 'u' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 118 0x76 'v' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x6c, /* 01101100 */

        0x38, /* 00111000 */

        0x00, /* 00000000 */



        /* 119 0x77 'w' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xc6, /* 11000110 */

        0xd6, /* 11010110 */

        0xd6, /* 11010110 */

        0xfe, /* 11111110 */

        0x6c, /* 01101100 */

        0x00, /* 00000000 */



        /* 120 0x78 'x' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xc6, /* 11000110 */

        0x6c, /* 01101100 */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */



        /* 121 0x79 'y' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7e, /* 01111110 */

        0x06, /* 00000110 */

        0xfc, /* 11111100 */



        /* 122 0x7a 'z' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0x4c, /* 01001100 */

        0x18, /* 00011000 */

        0x32, /* 00110010 */

        0x7e, /* 01111110 */

        0x00, /* 00000000 */



        /* 123 0x7b '{' */

        0x0e, /* 00001110 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x70, /* 01110000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x0e, /* 00001110 */

        0x00, /* 00000000 */



        /* 124 0x7c '|' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */



        /* 125 0x7d '}' */

        0x70, /* 01110000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x0e, /* 00001110 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x70, /* 01110000 */

        0x00, /* 00000000 */



        /* 126 0x7e '~' */

        0x76, /* 01110110 */

        0xdc, /* 11011100 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 127 0x7f '' */

        0x00, /* 00000000 */

        0x10, /* 00010000 */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xfe, /* 11111110 */

        0x00, /* 00000000 */



        /* 128 0x80 '�' */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x0c, /* 00001100 */

        0x78, /* 01111000 */



        /* 129 0x81 '�' */

        0xcc, /* 11001100 */

        0x00, /* 00000000 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 130 0x82 '�' */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xfe, /* 11111110 */

        0xc0, /* 11000000 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 131 0x83 '�' */

        0x7c, /* 01111100 */

        0x82, /* 10000010 */

        0x78, /* 01111000 */

        0x0c, /* 00001100 */

        0x7c, /* 01111100 */

        0xcc, /* 11001100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 132 0x84 '�' */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */

        0x78, /* 01111000 */

        0x0c, /* 00001100 */

        0x7c, /* 01111100 */

        0xcc, /* 11001100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 133 0x85 '�' */

        0x30, /* 00110000 */

        0x18, /* 00011000 */

        0x78, /* 01111000 */

        0x0c, /* 00001100 */

        0x7c, /* 01111100 */

        0xcc, /* 11001100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 134 0x86 '�' */

        0x30, /* 00110000 */

        0x30, /* 00110000 */

        0x78, /* 01111000 */

        0x0c, /* 00001100 */

        0x7c, /* 01111100 */

        0xcc, /* 11001100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 135 0x87 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0x7e, /* 01111110 */

        0x0c, /* 00001100 */

        0x38, /* 00111000 */



        /* 136 0x88 '�' */

        0x7c, /* 01111100 */

        0x82, /* 10000010 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xfe, /* 11111110 */

        0xc0, /* 11000000 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 137 0x89 '�' */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xfe, /* 11111110 */

        0xc0, /* 11000000 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 138 0x8a '�' */

        0x30, /* 00110000 */

        0x18, /* 00011000 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xfe, /* 11111110 */

        0xc0, /* 11000000 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 139 0x8b '�' */

        0x66, /* 01100110 */

        0x00, /* 00000000 */

        0x38, /* 00111000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 140 0x8c '�' */

        0x7c, /* 01111100 */

        0x82, /* 10000010 */

        0x38, /* 00111000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 141 0x8d '�' */

        0x30, /* 00110000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x38, /* 00111000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 142 0x8e '�' */

        0xc6, /* 11000110 */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0xc6, /* 11000110 */

        0xfe, /* 11111110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */



        /* 143 0x8f '�' */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xfe, /* 11111110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */



        /* 144 0x90 '�' */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0xfe, /* 11111110 */

        0xc0, /* 11000000 */

        0xf8, /* 11111000 */

        0xc0, /* 11000000 */

        0xfe, /* 11111110 */

        0x00, /* 00000000 */



        /* 145 0x91 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0x18, /* 00011000 */

        0x7e, /* 01111110 */

        0xd8, /* 11011000 */

        0x7e, /* 01111110 */

        0x00, /* 00000000 */



        /* 146 0x92 '�' */

        0x3e, /* 00111110 */

        0x6c, /* 01101100 */

        0xcc, /* 11001100 */

        0xfe, /* 11111110 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xce, /* 11001110 */

        0x00, /* 00000000 */



        /* 147 0x93 '�' */

        0x7c, /* 01111100 */

        0x82, /* 10000010 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 148 0x94 '�' */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 149 0x95 '�' */

        0x30, /* 00110000 */

        0x18, /* 00011000 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 150 0x96 '�' */

        0x78, /* 01111000 */

        0x84, /* 10000100 */

        0x00, /* 00000000 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 151 0x97 '�' */

        0x60, /* 01100000 */

        0x30, /* 00110000 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 152 0x98 '�' */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7e, /* 01111110 */

        0x06, /* 00000110 */

        0xfc, /* 11111100 */



        /* 153 0x99 '�' */

        0xc6, /* 11000110 */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x6c, /* 01101100 */

        0x38, /* 00111000 */

        0x00, /* 00000000 */



        /* 154 0x9a '�' */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 155 0x9b '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x7e, /* 01111110 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0x7e, /* 01111110 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 156 0x9c '�' */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0x64, /* 01100100 */

        0xf0, /* 11110000 */

        0x60, /* 01100000 */

        0x66, /* 01100110 */

        0xfc, /* 11111100 */

        0x00, /* 00000000 */



        /* 157 0x9d '�' */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x3c, /* 00111100 */

        0x7e, /* 01111110 */

        0x18, /* 00011000 */

        0x7e, /* 01111110 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 158 0x9e '�' */

        0xf8, /* 11111000 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xfa, /* 11111010 */

        0xc6, /* 11000110 */

        0xcf, /* 11001111 */

        0xc6, /* 11000110 */

        0xc7, /* 11000111 */



        /* 159 0x9f '�' */

        0x0e, /* 00001110 */

        0x1b, /* 00011011 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x18, /* 00011000 */

        0xd8, /* 11011000 */

        0x70, /* 01110000 */

        0x00, /* 00000000 */



        /* 160 0xa0 '�' */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0x78, /* 01111000 */

        0x0c, /* 00001100 */

        0x7c, /* 01111100 */

        0xcc, /* 11001100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 161 0xa1 '�' */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x38, /* 00111000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 162 0xa2 '�' */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */



        /* 163 0xa3 '�' */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 164 0xa4 '�' */

        0x76, /* 01110110 */

        0xdc, /* 11011100 */

        0x00, /* 00000000 */

        0xdc, /* 11011100 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x00, /* 00000000 */



        /* 165 0xa5 '�' */

        0x76, /* 01110110 */

        0xdc, /* 11011100 */

        0x00, /* 00000000 */

        0xe6, /* 11100110 */

        0xf6, /* 11110110 */

        0xde, /* 11011110 */

        0xce, /* 11001110 */

        0x00, /* 00000000 */



        /* 166 0xa6 '�' */

        0x3c, /* 00111100 */

        0x6c, /* 01101100 */

        0x6c, /* 01101100 */

        0x3e, /* 00111110 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 167 0xa7 '�' */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0x6c, /* 01101100 */

        0x38, /* 00111000 */

        0x00, /* 00000000 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 168 0xa8 '�' */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0x63, /* 01100011 */

        0x3e, /* 00111110 */

        0x00, /* 00000000 */



        /* 169 0xa9 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xfe, /* 11111110 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 170 0xaa '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xfe, /* 11111110 */

        0x06, /* 00000110 */

        0x06, /* 00000110 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 171 0xab '�' */

        0x63, /* 01100011 */

        0xe6, /* 11100110 */

        0x6c, /* 01101100 */

        0x7e, /* 01111110 */

        0x33, /* 00110011 */

        0x66, /* 01100110 */

        0xcc, /* 11001100 */

        0x0f, /* 00001111 */



        /* 172 0xac '�' */

        0x63, /* 01100011 */

        0xe6, /* 11100110 */

        0x6c, /* 01101100 */

        0x7a, /* 01111010 */

        0x36, /* 00110110 */

        0x6a, /* 01101010 */

        0xdf, /* 11011111 */

        0x06, /* 00000110 */



        /* 173 0xad '�' */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x3c, /* 00111100 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */



        /* 174 0xae '�' */

        0x00, /* 00000000 */

        0x33, /* 00110011 */

        0x66, /* 01100110 */

        0xcc, /* 11001100 */

        0x66, /* 01100110 */

        0x33, /* 00110011 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 175 0xaf '�' */

        0x00, /* 00000000 */

        0xcc, /* 11001100 */

        0x66, /* 01100110 */

        0x33, /* 00110011 */

        0x66, /* 01100110 */

        0xcc, /* 11001100 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 176 0xb0 '�' */

        0x22, /* 00100010 */

        0x88, /* 10001000 */

        0x22, /* 00100010 */

        0x88, /* 10001000 */

        0x22, /* 00100010 */

        0x88, /* 10001000 */

        0x22, /* 00100010 */

        0x88, /* 10001000 */



        /* 177 0xb1 '�' */

        0x55, /* 01010101 */

        0xaa, /* 10101010 */

        0x55, /* 01010101 */

        0xaa, /* 10101010 */

        0x55, /* 01010101 */

        0xaa, /* 10101010 */

        0x55, /* 01010101 */

        0xaa, /* 10101010 */



        /* 178 0xb2 '�' */

        0x77, /* 01110111 */

        0xdd, /* 11011101 */

        0x77, /* 01110111 */

        0xdd, /* 11011101 */

        0x77, /* 01110111 */

        0xdd, /* 11011101 */

        0x77, /* 01110111 */

        0xdd, /* 11011101 */



        /* 179 0xb3 '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 180 0xb4 '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0xf8, /* 11111000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 181 0xb5 '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0xf8, /* 11111000 */

        0x18, /* 00011000 */

        0xf8, /* 11111000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 182 0xb6 '�' */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0xf6, /* 11110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */



        /* 183 0xb7 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xfe, /* 11111110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */



        /* 184 0xb8 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xf8, /* 11111000 */

        0x18, /* 00011000 */

        0xf8, /* 11111000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 185 0xb9 '�' */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0xf6, /* 11110110 */

        0x06, /* 00000110 */

        0xf6, /* 11110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */



        /* 186 0xba '�' */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */



        /* 187 0xbb '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xfe, /* 11111110 */

        0x06, /* 00000110 */

        0xf6, /* 11110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */



        /* 188 0xbc '�' */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0xf6, /* 11110110 */

        0x06, /* 00000110 */

        0xfe, /* 11111110 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 189 0xbd '�' */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0xfe, /* 11111110 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 190 0xbe '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0xf8, /* 11111000 */

        0x18, /* 00011000 */

        0xf8, /* 11111000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 191 0xbf '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xf8, /* 11111000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 192 0xc0 '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x1f, /* 00011111 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 193 0xc1 '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0xff, /* 11111111 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 194 0xc2 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xff, /* 11111111 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 195 0xc3 '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x1f, /* 00011111 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 196 0xc4 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xff, /* 11111111 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 197 0xc5 '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0xff, /* 11111111 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 198 0xc6 '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x1f, /* 00011111 */

        0x18, /* 00011000 */

        0x1f, /* 00011111 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 199 0xc7 '�' */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x37, /* 00110111 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */



        /* 200 0xc8 '�' */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x37, /* 00110111 */

        0x30, /* 00110000 */

        0x3f, /* 00111111 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 201 0xc9 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x3f, /* 00111111 */

        0x30, /* 00110000 */

        0x37, /* 00110111 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */



        /* 202 0xca '�' */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0xf7, /* 11110111 */

        0x00, /* 00000000 */

        0xff, /* 11111111 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 203 0xcb '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xff, /* 11111111 */

        0x00, /* 00000000 */

        0xf7, /* 11110111 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */



        /* 204 0xcc '�' */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x37, /* 00110111 */

        0x30, /* 00110000 */

        0x37, /* 00110111 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */



        /* 205 0xcd '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xff, /* 11111111 */

        0x00, /* 00000000 */

        0xff, /* 11111111 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 206 0xce '�' */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0xf7, /* 11110111 */

        0x00, /* 00000000 */

        0xf7, /* 11110111 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */



        /* 207 0xcf '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0xff, /* 11111111 */

        0x00, /* 00000000 */

        0xff, /* 11111111 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 208 0xd0 '�' */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0xff, /* 11111111 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 209 0xd1 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xff, /* 11111111 */

        0x00, /* 00000000 */

        0xff, /* 11111111 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 210 0xd2 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xff, /* 11111111 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */



        /* 211 0xd3 '�' */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x3f, /* 00111111 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 212 0xd4 '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x1f, /* 00011111 */

        0x18, /* 00011000 */

        0x1f, /* 00011111 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 213 0xd5 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x1f, /* 00011111 */

        0x18, /* 00011000 */

        0x1f, /* 00011111 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 214 0xd6 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x3f, /* 00111111 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */



        /* 215 0xd7 '�' */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0xff, /* 11111111 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */



        /* 216 0xd8 '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0xff, /* 11111111 */

        0x18, /* 00011000 */

        0xff, /* 11111111 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 217 0xd9 '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0xf8, /* 11111000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 218 0xda '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x1f, /* 00011111 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 219 0xdb '�' */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */



        /* 220 0xdc '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */



        /* 221 0xdd '�' */

        0xf0, /* 11110000 */

        0xf0, /* 11110000 */

        0xf0, /* 11110000 */

        0xf0, /* 11110000 */

        0xf0, /* 11110000 */

        0xf0, /* 11110000 */

        0xf0, /* 11110000 */

        0xf0, /* 11110000 */



        /* 222 0xde '�' */

        0x0f, /* 00001111 */

        0x0f, /* 00001111 */

        0x0f, /* 00001111 */

        0x0f, /* 00001111 */

        0x0f, /* 00001111 */

        0x0f, /* 00001111 */

        0x0f, /* 00001111 */

        0x0f, /* 00001111 */



        /* 223 0xdf '�' */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0xff, /* 11111111 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 224 0xe0 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x76, /* 01110110 */

        0xdc, /* 11011100 */

        0xc8, /* 11001000 */

        0xdc, /* 11011100 */

        0x76, /* 01110110 */

        0x00, /* 00000000 */



        /* 225 0xe1 '�' */

        0x78, /* 01111000 */

        0xcc, /* 11001100 */

        0xcc, /* 11001100 */

        0xd8, /* 11011000 */

        0xcc, /* 11001100 */

        0xc6, /* 11000110 */

        0xcc, /* 11001100 */

        0x00, /* 00000000 */



        /* 226 0xe2 '�' */

        0xfe, /* 11111110 */

        0xc6, /* 11000110 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0xc0, /* 11000000 */

        0x00, /* 00000000 */



        /* 227 0xe3 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0xfe, /* 11111110 */

        0x6c, /* 01101100 */

        0x6c, /* 01101100 */

        0x6c, /* 01101100 */

        0x6c, /* 01101100 */

        0x00, /* 00000000 */



        /* 228 0xe4 '�' */

        0xfe, /* 11111110 */

        0xc6, /* 11000110 */

        0x60, /* 01100000 */

        0x30, /* 00110000 */

        0x60, /* 01100000 */

        0xc6, /* 11000110 */

        0xfe, /* 11111110 */

        0x00, /* 00000000 */



        /* 229 0xe5 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0xd8, /* 11011000 */

        0xd8, /* 11011000 */

        0xd8, /* 11011000 */

        0x70, /* 01110000 */

        0x00, /* 00000000 */



        /* 230 0xe6 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x7c, /* 01111100 */

        0xc0, /* 11000000 */



        /* 231 0xe7 '�' */

        0x00, /* 00000000 */

        0x76, /* 01110110 */

        0xdc, /* 11011100 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */



        /* 232 0xe8 '�' */

        0x7e, /* 01111110 */

        0x18, /* 00011000 */

        0x3c, /* 00111100 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x3c, /* 00111100 */

        0x18, /* 00011000 */

        0x7e, /* 01111110 */



        /* 233 0xe9 '�' */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0xc6, /* 11000110 */

        0xfe, /* 11111110 */

        0xc6, /* 11000110 */

        0x6c, /* 01101100 */

        0x38, /* 00111000 */

        0x00, /* 00000000 */



        /* 234 0xea '�' */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x6c, /* 01101100 */

        0x6c, /* 01101100 */

        0xee, /* 11101110 */

        0x00, /* 00000000 */



        /* 235 0xeb '�' */

        0x0e, /* 00001110 */

        0x18, /* 00011000 */

        0x0c, /* 00001100 */

        0x3e, /* 00111110 */

        0x66, /* 01100110 */

        0x66, /* 01100110 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */



        /* 236 0xec '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0xdb, /* 11011011 */

        0xdb, /* 11011011 */

        0x7e, /* 01111110 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 237 0xed '�' */

        0x06, /* 00000110 */

        0x0c, /* 00001100 */

        0x7e, /* 01111110 */

        0xdb, /* 11011011 */

        0xdb, /* 11011011 */

        0x7e, /* 01111110 */

        0x60, /* 01100000 */

        0xc0, /* 11000000 */



        /* 238 0xee '�' */

        0x1e, /* 00011110 */

        0x30, /* 00110000 */

        0x60, /* 01100000 */

        0x7e, /* 01111110 */

        0x60, /* 01100000 */

        0x30, /* 00110000 */

        0x1e, /* 00011110 */

        0x00, /* 00000000 */



        /* 239 0xef '�' */

        0x00, /* 00000000 */

        0x7c, /* 01111100 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0xc6, /* 11000110 */

        0x00, /* 00000000 */



        /* 240 0xf0 '�' */

        0x00, /* 00000000 */

        0xfe, /* 11111110 */

        0x00, /* 00000000 */

        0xfe, /* 11111110 */

        0x00, /* 00000000 */

        0xfe, /* 11111110 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 241 0xf1 '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x7e, /* 01111110 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0x00, /* 00000000 */



        /* 242 0xf2 '�' */

        0x30, /* 00110000 */

        0x18, /* 00011000 */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0x00, /* 00000000 */



        /* 243 0xf3 '�' */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0x18, /* 00011000 */

        0x0c, /* 00001100 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0x00, /* 00000000 */



        /* 244 0xf4 '�' */

        0x0e, /* 00001110 */

        0x1b, /* 00011011 */

        0x1b, /* 00011011 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */



        /* 245 0xf5 '�' */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0xd8, /* 11011000 */

        0xd8, /* 11011000 */

        0x70, /* 01110000 */



        /* 246 0xf6 '�' */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x7e, /* 01111110 */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 247 0xf7 '�' */

        0x00, /* 00000000 */

        0x76, /* 01110110 */

        0xdc, /* 11011100 */

        0x00, /* 00000000 */

        0x76, /* 01110110 */

        0xdc, /* 11011100 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 248 0xf8 '�' */

        0x38, /* 00111000 */

        0x6c, /* 01101100 */

        0x6c, /* 01101100 */

        0x38, /* 00111000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 249 0xf9 '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 250 0xfa '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x18, /* 00011000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 251 0xfb '�' */

        0x0f, /* 00001111 */

        0x0c, /* 00001100 */

        0x0c, /* 00001100 */

        0x0c, /* 00001100 */

        0xec, /* 11101100 */

        0x6c, /* 01101100 */

        0x3c, /* 00111100 */

        0x1c, /* 00011100 */



        /* 252 0xfc '�' */

        0x6c, /* 01101100 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x36, /* 00110110 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 253 0xfd '�' */

        0x78, /* 01111000 */

        0x0c, /* 00001100 */

        0x18, /* 00011000 */

        0x30, /* 00110000 */

        0x7c, /* 01111100 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 254 0xfe '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x3c, /* 00111100 */

        0x3c, /* 00111100 */

        0x3c, /* 00111100 */

        0x3c, /* 00111100 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



        /* 255 0xff '�' */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */

        0x00, /* 00000000 */



};






int startX(char *c){
if(isatty(1)==0){
char t[100];
strcpy(t,trun);
strcat(t,c);
strcat(t,"&");
system(t);
exit(0);
}
int fbfd = open("/dev/fb0", O_RDWR);
ioctl(fbfd, FBIOGET_FSCREENINFO, &finfo);
ioctl(fbfd, FBIOGET_VSCREENINFO, &vinfo);
screensize = vinfo.xres * vinfo.yres * vinfo.bits_per_pixel / 8;
fbp = (char *)mmap(0, screensize, PROT_READ | PROT_WRITE, MAP_SHARED, fbfd, 0);
struct termios newt;
tcgetattr(fileno(stdin),&oldt);
memcpy(&newt,&oldt,sizeof(struct termios));
newt.c_lflag &= ~(ECHO|ICANON);
newt.c_cc[VTIME]=0;
newt.c_cc[VMIN]=0;
tcsetattr(fileno(stdin),TCSANOW,&newt);
MOUSEfile=open("/dev/input/mice",O_RDONLY|O_NONBLOCK);
mouseX=vinfo.xres/2;
mouseY=vinfo.yres/2;
}

void endX(int fbfd){
oldt.c_lflag|=ECHO|ICANON;
tcsetattr(fileno(stdin),TCSANOW,&oldt);
close (MOUSEfile);
    close(fbfd);
}


void refresh(){
   munmap(fbp, screensize-1);
}

void ppixel(int x, int y,char r,char g,char b){
if (x>0 && y>0 && x<vinfo.xres && y<vinfo.yres){
           int location = (x+vinfo.xoffset) * (vinfo.bits_per_pixel/8) +
                       (y+vinfo.yoffset) * finfo.line_length;

            if (vinfo.bits_per_pixel == 32) {
                *(fbp + location) = b;        
                *(fbp + location + 1) = g;  
                *(fbp + location + 2) = r; 
                *(fbp + location + 3) = 0;      

            } else  { 
                unsigned short int t = r<<11 | g << 5 | b;
                *((unsigned short int*)(fbp + location)) = t;
}
}
}


void ppixel16(int x, int y,int color){
if (x>0 && y>0 && x<vinfo.xres && y<vinfo.yres){
           int location = (x+vinfo.xoffset) * (vinfo.bits_per_pixel/8) +
                       (y+vinfo.yoffset) * finfo.line_length;


                *((unsigned short int*)(fbp + location)) = color;

}
}




void hline(int x, int y,int x2,char r,char g,char b){
int f;
int xx1=x;
int xx2=x2;
int xx3=x;
int yy=y;
int steeps;
int location;
int addss;
if(xx2<xx1){
xx1=xx2;
xx2=xx3;
}
if(yy<0)yy=0;
if(yy>vinfo.yres-1)yy=vinfo.yres-1;
if(xx1<0)xx1=0;
if(xx2<0)xx2=0;
if(xx1>vinfo.xres-1)xx1=vinfo.xres-1;
if(xx2>vinfo.xres-1)xx2=vinfo.xres-1;
                       
location = (xx1+vinfo.xoffset) * (vinfo.bits_per_pixel/8) +(yy+vinfo.yoffset) * finfo.line_length;
steeps=xx2-xx1;
addss=(1+vinfo.xoffset) * (vinfo.bits_per_pixel/8) +(0+vinfo.yoffset) * finfo.line_length;
for(f=0;f<steeps;f++){
            if (vinfo.bits_per_pixel == 32) {
                *(fbp + location) = b;        
                *(fbp + location + 1) = g;  
                *(fbp + location + 2) = r; 
                *(fbp + location + 3) = 0;      

            } else  { 
                unsigned short int t = r<<11 | g << 5 | b;
                *((unsigned short int*)(fbp + location)) = t;
}
location=location+addss;
}

}


void vline(int x,int y,int y2,char r,char g,char b){
int f;
int yy1=y;
int yy2=y2;
int yy3=y;
int xx=x;
int steeps;
int location;
int addss;
if(yy2<yy1){
yy1=yy2;
yy2=yy3;
}
if(xx<0)xx=0;
if(xx>vinfo.xres-1)xx=vinfo.xres-1;
if(yy1<0)yy1=0;
if(yy2<0)yy2=0;
if(yy1>vinfo.yres-1)yy1=vinfo.yres-1;
if(yy2>vinfo.yres-1)yy2=vinfo.yres-1;
                       
location = (xx+vinfo.xoffset) * (vinfo.bits_per_pixel/8) +(yy1+vinfo.yoffset) * finfo.line_length;
steeps=yy2-yy1;
addss=(0+vinfo.xoffset) * (vinfo.bits_per_pixel/8) +(1+vinfo.yoffset) * finfo.line_length;
for(f=0;f<steeps;f++){
            if (vinfo.bits_per_pixel == 32) {
                *(fbp + location) = b;        
                *(fbp + location + 1) = g;  
                *(fbp + location + 2) = r; 
                *(fbp + location + 3) = 0;      

            } else  { 
                unsigned short int t = r<<11 | g << 5 | b;
                *((unsigned short int*)(fbp + location)) = t;
}
location=location+addss;
}

} 


void boxs(int x,int y,int x2,int y2,char r,char g,char b){
int f;
int ff;
int xx1=x;
int xx2=x2;
int xx3=x;
int yy=y;
int yy1=y;
int yy2=y2;
int yy3=y;
int steeps;
int steeps2;
int location;
int addss;
int addss2;
if(xx2<xx1){
xx1=xx2;
xx2=xx3;
}
if(yy2<yy1){
yy1=yy2;
yy2=yy3;
}
if(yy1<0)yy1=0;
if(yy2<0)yy2=0;
if(yy1>vinfo.yres-1)yy1=vinfo.yres-1;
if(yy2>vinfo.yres-1)yy2=vinfo.yres-1;
if(xx1<0)xx1=0;
if(xx2<0)xx2=0;
if(xx1>vinfo.xres-1)xx1=vinfo.xres-1;
if(xx2>vinfo.xres-1)xx2=vinfo.xres-1;
                       
location = (xx1+vinfo.xoffset) * (vinfo.bits_per_pixel/8) +(yy1+vinfo.yoffset) * finfo.line_length;
steeps2=xx2-xx1;
steeps=yy2-yy1;
addss=(1+vinfo.xoffset) * (vinfo.bits_per_pixel/8) +(0+vinfo.yoffset) * finfo.line_length;
addss2=((vinfo.xres-(xx2-xx1))*addss);
if(addss2<addss)addss2=0;
for(f=0;f<steeps;f++){
	for(ff=0;ff<steeps2;ff++){
            if (vinfo.bits_per_pixel == 32) {
                *(fbp + location) = b;        
                *(fbp + location + 1) = g;  
                *(fbp + location + 2) = r; 
                *(fbp + location + 3) = 0;      

            } else  { 
                unsigned short int t = r<<11 | g << 5 | b;
                *((unsigned short int*)(fbp + location)) = t;
}
location=location+addss;
}
location=location+addss2;
}
}



void gputs(int x,int y,char r,char g,char b,char *c){
int ii=0;
int xx=x;
int yy=y;
while(c[ii]!=0){
gputc(xx,yy,r,g,b,c[ii]);
xx=xx+8;
ii++;
}
}

void gputc(int x,int y,char r,char g,char b,char c){
char bits;
char bit;
int scrolls;
int iii=0;
int ii=0;
int xx=x;
int yy=y;
int aa=0;
aa=c*8;
for (ii=0;ii<8;ii++){
scrolls=128;
bits=font8x8[aa];
for (iii=0;iii<8;iii++){
if ((bits & scrolls)!=0){
ppixel(xx,yy,r,g,b);
}
xx++;
scrolls=scrolls/2;
}
xx=x;
aa++;
yy++;
}

} 




void ball(int xx,int yy ,int rr,char rc,char gc,char bcc){
long double rrr=(long double)rr,dx=(long double)xx,dy=(long double)yy,ddddd=0.0,d1=0.0,dd1=0,d=0.0,dd=0.0,ddd=0.0,pi=(long double)PI;
int x=1,y=1,bc=0,c=7,x1=0,y1=0;
long double rrr1=rrr*2;
long double xyr=rrr1*pi*2;
long double rrr2=xyr/2;
for (ddd=0.0;ddd<xyr/2;ddd=ddd+1.0){
dd=dy-rrr1*(cos)(ddd/rrr2*pi);
d=dx+rrr1*(sin)(ddd/rrr2*pi);
ddddd--;
if (ddddd>xyr + 1.0)ddddd=0;
dd1=dy-rrr1*(cos)(ddddd/rrr2*pi);
d1=dx+rrr1*(sin)(ddddd/rrr2*pi);
bc=(int)ddd;
x=(int)d;
y=(int)dd;
x1=(int)d1;
y1=(int)dd1;
hline(x1,y,x,rc,gc,bcc);
}

}


void lineR(int x,int y,int x2,int y2,char r,char g,char bc){
long l1=0,l2=0,l3=0,l4=0,l5=0;
int i4=0;
int xx=x;
int yy=y;
int xxx=x2;
int yyy=y2;
int c=0;
int c2=0;
if (xx>xxx){
i4=xxx;
xxx=xx;
xx=i4;
}
if (yy>yyy){
i4=yyy;
yyy=yy;
yy=i4;
}

int i1=xxx-xx;
int i2=yyy-yy;
int i3;
int i5;
int i6;
int i8;
int b=0;
int ty=0;
if (i1>i2){
l1=(long)i1;
l2=(long)i2;
if(l1==0){
l1=1;};
l4=(l2*10000/l1);
l3=0;
i6=0;
c=0;
c2=0;
for(i5=0;i5<i1+1;i5++){
l5=l3/10000;
i3=(int)l5;
ppixel(xx+i5,y+(i3),r,g,bc);
l3=l3+l4;
}
}else{
l1=(long)i1;
l2=(long)i2;
if(l2==0){
l2=1;};
l4=(l1*10000/l2);
l3=0;
i6=0;
c=0;
c2=0;
for(i5=0;i5<i2+1;i5++){
l5=l3/10000;
i3=(int)l5;
ppixel(xx+i3,y+(i5),r,g,bc);
l3=l3+l4;
}
} 
}

void lineL(int x,int y,int x2,int y2,char r,char g,char bc){
long l1=0,l2=0,l3=0,l4=0,l5=0;
int i4=0;
int xx=x;
int yy=y;
int xxx=x2;
int yyy=y2;
int c=0;
int c2=0;
if (xx>xxx){
i4=xxx;
xxx=xx;
xx=i4;
}
if (yy<yyy){
i4=yyy;
yyy=yy;
yy=i4;
}

int i1=xxx-xx;
int i2=yy-yyy;
int i3;
int i5;
int i6;
int i8;
int b=0;
int ty=0;
if (i1>i2){
l1=(long)i1;
l2=(long)i2;
if(l1==0){
l1=1;};
l4=(l2*10000/l1);
l3=0;
i6=0;
c=0;
c2=0;
for(i5=0;i5<i1+1;i5++){
l5=l3/10000;
i3=(int)l5;
ppixel(xx+i5,y-(i3),r,g,bc);
l3=l3+l4;
}
}else{
l1=(long)i1;
l2=(long)i2;
if(l2==0){
l2=1;};
l4=(l1*10000/l2);
l3=0;
i6=0;
c=0;
c2=0;
for(i5=0;i5<i2+1;i5++){
l5=l3/10000;
i3=(int)l5;
ppixel(xx+i3,yy-i5,r,g,bc);
l3=l3+l4;
}
} 
}

void line(int x,int y,int x2,int y2,char r,char g,char b){
int i=-1;
if(x>x2 && y<y2)i=5;
if(x>x2 && y>y2)i=4;
if(x<x2 && y<y2)i=3;
if(x<x2 && y>y2)i=2;
if(y==y2 && x<x2)i=0;
if(x==x2 && y<y2)i=1;
if(y==y2 && x2<x)i=0;
if(x==x2 && y2<y)i=1;
if (i==0)hline(x,y,x2,r,g,b);
if (i==1)vline(x,y,y2,r,g,b);
if (i==2)lineL(x,y,x2,y2,r,g,b);
if (i==3)lineR(x,y,x2,y2,r,g,b);
if (i==4)lineR(x2,y2,x,y,r,g,b);
if (i==5)lineL(x2,y2,x,y,r,g,b);
if (i==7)hline(x2,y,x,r,g,b);
if (i==6)vline(x,y2,y,r,g,b);
}

void rectangle(int x,int y,int x2,int y2,char r,char g,char b){
line(x,y,x2,y,r,g,b);
line(x,y2,x2,y2,r,g,b);
line(x,y,x,y2,r,g,b);
line(x2,y,x2,y2,r,g,b);
}


void grid (control c,int steep,char r,char g,char b){
int i;
boxs(c.x,c.y,c.x+c.w,c.y+c.h,255,255,255);
rectangle(c.x,c.y,c.x+c.w,c.y+c.h,r,g,b);
for(i=c.x;i<c.x+c.w;i=i+steep)line(i,c.y,i,c.y+c.h,r,g,b);
for(i=c.y;i<c.y+c.h;i=i+steep)line(c.x,i,c.x+c.w,i,r,g,b);
}

int gpixel(int x,int y){
int color=-1;
int r=0;
int g=0;
int b=0;
int a=0;
int t=0;
int tt=15;
unsigned short int aa=0;
if (x>0 && y>0 && x<vinfo.xres && y<vinfo.yres){
           int location = (x+vinfo.xoffset) * (vinfo.bits_per_pixel/8) +
                       (y+vinfo.yoffset) * finfo.line_length;

            if (vinfo.bits_per_pixel == 32) {
                b=*(fbp + location);        
                g=*(fbp + location + 1);  
                r=*(fbp + location + 2); 
                a=*(fbp + location + 3);      

                color=r<<16 | g << 8 | b;
            } else  { 

		aa=*((unsigned short int*)(fbp + location));
		color=(int) aa;




}

}

return (int) color;
} 


void putImage2(int x,int y, int *img){
char r;
char g;
char b;
int t=0;
int ix=0;
int iy=0;
int ttt;
if (img[2]==32){
for (iy=0;iy<img[1]+1;iy++){
for (ix=0;ix<img[0]+1;ix++){
ttt=255;
b=(char) ttt & img[iy*img[0]+ix+3];
ttt=ttt<<8;
g=(char)((img[iy*img[0]+ix+3] & ttt)>>8);
ttt=ttt<<8;
r=(char)((img[iy*img[0]+ix+3] & ttt)>>16);
ppixel(x+ix,y+iy,r,g,b);
}
}
}else{
for (iy=0;iy<img[1]+1;iy++){
for (ix=0;ix<img[0]+1;ix++){
ppixel16(x+ix,y+iy,img[iy*img[0]+ix+3]);
}
}
}
}

void putImage(int x,int y, int *img){
int f;
int ff;
int r;
int g;
int b;
int rr;
int gg;
int bb;
int xx1=x;
int xx2=img[0]+x;
int xx3=x;
int yy1=y;
int yy2=img[1]+y;
int yy3=y;
int yy=y;
int steeps;
int steeps2;
int location;
int locations;
int addss;
int addss2;
int addss3;
int addss4;
if(xx2>vinfo.xres)xx2=vinfo.xres;
if(yy2>vinfo.yres)yy2=vinfo.yres;
if(xx2<xx1){
xx1=xx2;
xx2=xx3;
}
if(yy2<yy1){
yy1=yy2;
yy2=yy3;
}
if(yy1<0)yy1=0;
if(yy2<0)yy2=0;
if(yy1>vinfo.yres)yy1=vinfo.yres;
if(yy2>vinfo.yres)yy2=vinfo.yres;
if(xx1<0)xx1=0;
if(xx2<0)xx2=0;
if(xx1>vinfo.xres)xx1=vinfo.xres;
if(xx2>vinfo.xres)xx2=vinfo.xres;
steeps=xx2-xx1;
steeps2=yy2-yy1;
addss=1;
addss3=(vinfo.bits_per_pixel/8);
addss4=((vinfo.xres-(xx2-xx1))*addss3);
addss2=img[0]-(xx2-xx1); 
if(addss2<1)addss2=0;
location=3;
locations = (x+vinfo.xoffset) * (vinfo.bits_per_pixel/8) + (y+vinfo.yoffset) * finfo.line_length;
if(vinfo.bits_per_pixel==32){
for(f=0;f<steeps2;f++){
	for(ff=0;ff<steeps;ff++){
		b=(img[f*img[0]+ff+location] & 0xff);
		g=(img[f*img[0]+ff+location] & 0xff00)>>8;
		r=(img[f*img[0]+ff+location] & 0xff0000)>>16;
        *(fbp + locations) = b;        
		*(fbp + locations + 1) = g;  
        *(fbp + locations + 2) = r; 
        *(fbp + locations + 3) = 0;      
		locations=locations+addss3;
	}
	location=location+addss2;
	locations=locations+addss4;
}
}
}
void copyImage(int x,int y, int *img){
int r;
int g;
int b;
int ix=0;
int iy=0;
img[2]=vinfo.bits_per_pixel;
for (iy=0;iy<img[1]+1;iy++){
for (ix=0;ix<img[0]+1;ix++){
img[iy*img[0]+ix+3]=gpixel(x+ix,y+iy);
}
}
}


void circle(int xx,int yy ,int rr,char rcc,char gcc, char bcc){
long double rrr=(long double)rr,dx=(long double)xx,dy=(long double)yy,ddddd=0.0,d1=0.0,dd1=0,d=0.0,dd=0.0,ddd=0.0,pi=(long double)PI;
long double xyr=rrr*2;
int x=1,y=1,bc=0,c=7,x1=0,y1=0;
long double rrr1=rrr*2;
long double rrr2=xyr/2;
for (ddd=0.0;ddd<xyr+1.0;ddd=ddd+1.0){
dd=dy-rrr1*(cos)(ddd/rrr2*pi);
d=dx+rrr1*(sin)(ddd/rrr2*pi);
ddddd=ddd+1.0;
if (ddddd>xyr + 1.0)ddddd=0;
dd1=dy-rrr1*(cos)(ddddd/rrr2*pi);
d1=dx+rrr1*(sin)(ddddd/rrr2*pi);
bc=(int)ddd;
x=(int)d;
y=(int)dd;
x1=(int)d1;
y1=(int)dd1;
line(x,y,x1,y1,rcc,gcc,bcc);
}

}

int *creatImage(int w,int h){
int *bytes=(int *) malloc((w)*(h)*sizeof(int)+sizeof(int)*4);
bytes[0]=w;
bytes[1]=h;
bytes[2]=32;
return (int *) bytes;
}


void Ipixel(int x,int y,int *img,char r,char g,char b){
if(x>=0 && x<=img[0] && y>=0 && y<=img[1]) img[x+(y*img[0])+3]=r<<16 | g << 8 | b;
}

int Igpixel(int x,int y,int *img,char *r,char *g,char *b){
unsigned short int tt=15;
if(x>=0 && x<=img[0] && y>=0 && y<=img[1]) {
b=(char *)(img[img[0]*y+x+3] & tt/16);
tt=tt<<8;
g=(char *)((img[img[0]*y+x+3] & tt/16)>>5);
tt=tt<<8;
r=(char *)((img[img[0]*y+x+3] & tt/16)>>11);
}else{
return -1;
}
return 0;
}




void ihline(int x, int y,int x2,int *img,char r,char g,char b){
int f;
int xx1=x;
int xx2=x2;
int xx3=x;
int yy=y;
int steeps;
int location;
int addss;
if(xx2<xx1){
xx1=xx2;
xx2=xx3;
}
if(yy<0)yy=0;
if(yy>img[1]-1)yy=img[1]-1;
if(xx1<0)xx1=0;
if(xx2<0)xx2=0;
if(xx1>img[0]-1)xx1=img[0]-1;
if(xx2>img[0]-1)xx2=img[0]-1;
steeps=xx2-xx1;
addss=1;
location=yy*img[0]+xx1+3;
for(f=0;f<steeps;f++){
img[f+location]=r<<16 | g << 8 | b;
}
}


void iboxs(int x,int y,int x2,int y2,int *img,char r,char g,char b){
int f;
int ff;
int xx1=x;
int xx2=x2;
int xx3=x;
int yy1=y;
int yy2=x2;
int yy3=y;
int yy=y;
int steeps;
int steeps2;
int location;
int addss;
int addss2;
if(xx2<xx1){
xx1=xx2;
xx2=xx3;
}
if(yy2<yy1){
yy1=yy2;
yy2=yy3;
}
if(yy1<0)yy1=0;
if(yy2<0)yy2=0;
if(yy1>img[1]-1)yy1=img[1]-1;
if(yy2>img[1]-1)yy2=img[1]-1;
if(xx1<0)xx1=0;
if(xx2<0)xx2=0;
if(xx1>img[0]-1)xx1=img[0]-1;
if(xx2>img[0]-1)xx2=img[0]-1;
steeps=xx2-xx1;
steeps2=yy2-yy1;
addss=1;
addss2=img[0]-(xx2-xx1);
location=yy*img[0]+xx1+3;
for(f=0;f<steeps2;f++){
	for(ff=0;ff<steeps;ff++){
		img[x+location]=r<<16 | g << 8 | b;
		location=location+addss;
	}
	location=location+addss2;
}
}


int RGBC(char r,char g,char b){
int a=0;
           if (vinfo.bits_per_pixel == 32) {
		a= r << 16 | g << 8 | b; 
            } else  { 
                unsigned short int t = r<<11 | g << 5 | b;
		a=(int) t; 
}
return a;
}



void fffill(int x,int y,char rc,char gc,char bc){
int color=RGBC(rc,gc,bc);
int i=0;
char b=0;
int xx=x;
int yy=y;
do{
i=gpixel(xx,yy);
ppixel(xx,yy,rc,gc,bc);
if (i<0 || i == color || xx < 0){
yy++;
xx=x;
i=gpixel(xx,yy);
if (xx==x && i == color)b=1;
}else xx--;
if (yy>vinfo.xres)b=1;
}while(b!=1);

i=0;
b=0;
xx=x+1;
yy=y;
do{
i=gpixel(xx,yy);
ppixel(xx,yy,rc,gc,bc);
if (i<0 || i == color || xx > vinfo.xres){
yy++;
xx=x+1;
i=gpixel(xx,yy);
if (xx==x+1 && i == color)b=1;
}else xx++;
if (yy>vinfo.yres)b=1;
}while(b!=1);

i=0;
b=0;
xx=x;
yy=y-1;
do{
i=gpixel(xx,yy);
ppixel(xx,yy,rc,gc,bc);
if (i<0 || i == color || xx < 0){
yy--;
xx=x;
i=gpixel(xx,yy);
if (xx==x && i == color)b=1;
}else xx--;
if (yy<0)b=1;
}while(b!=1);

i=0;
b=0;
xx=x+1;
yy=y-1;
do{
i=gpixel(xx,yy);
ppixel(xx,yy,rc,gc,bc);
if (i<0 || i == color || xx > vinfo.xres){
yy--;
xx=x+1;
i=gpixel(xx,yy);
if (xx==x+1 && i == color)b=1;
}else xx++;
if (yy<0)b=1;
}while(b!=1);


}


void poligan(int *p,int size,char r,char g,char b){
int i=0,cc=1,ccc=0;
for (i=0;i<(size-1)*2-1;i=i+2){
ppixel(p[i],p[i+1],r,g,b);
line(p[i],p[i+1],p[i+2],p[i+3],r,g,b);
}
}

	

void poly(int xx,int yy ,int rr,int divisions,int *p){
long double rrr=(long double)rr,dx=(long double)xx,dy=(long double)yy,ddddd=0.0,d1=0.0,dd1=0,d=0.0,dd=0.0,ddd=0.0,pi=(long double)PI,div=(long double)divisions;
long double xyr=rrr*2;
int x=1,y=1,bc=0,c=7,x1=0,y1=0;
long double rrr1=rrr*2;
long double rrr2=div/2;
for (ddd=0.0;ddd<div;ddd=ddd+1.0){
dd=dy-rrr1*(cos)(ddd/rrr2*pi);
d=dx+rrr1*(sin)(ddd/rrr2*pi);
ddddd=ddd+1.0;
bc=(int)ddd;
x=(int)d;
y=(int)dd;
p[bc*2]=x;
p[bc*2+1]=y;
}
bc=(int)ddd;
p[bc*2]=p[0];
p[bc*2+1]=p[1];
}

void fillPolygan(int x,int y,int r,int division,char rr,char gg,char bb){
int pol[division*2 + 10];
poly(x,y,r,division,&pol[0]);
poligan(&pol[0],division+1,rr, gg, bb);
fffill(x,y,rr, gg, bb);
}

void drawLabel(label l){
char caption[100];
if(l.c.h<16)l.c.h=16;
boxs(l.c.x,l.c.y,l.c.x+l.c.w,l.c.y+l.c.h,255,255,255);
rectangle(l.c.x,l.c.y,l.c.x+l.c.w,l.c.y+l.c.h,l.r,l.g,l.b);
strcpy(caption,l.caption);
int tl=l.c.w/8-1;
if (tl<0) tl=0;
if (l.c.w/8+1> 98)tl=98;
caption[tl]='\0';
gputs(l.c.x+3,l.c.y+3,l.r,l.g,l.b,caption);
}


int textW(char *caption){
int r=strlen(caption) * 8;
return r;
}

void centerControl (control *c,int tw,int th){
c->x=(tw-c->w)/2;
c->y=(th-c->h)/2;
}

void outSide(int y){
boxs(0,0,vinfo.xres,y,0,255,255);
boxs(0,y,vinfo.xres,vinfo.yres,200,0,0);
}

void ivline(int x,int y,int y2,int *img,char r,char g,char b){
int f;
int yy1=y;
int yy2=y2;
int yy3=y;
int xx=x;
int steeps;
int location;
int addss;
if(yy2<yy1){
yy1=yy2;
yy2=yy3;
}
if(xx<0)xx=0;
if(xx>img[0]-1)xx=img[0]-1;
if(yy1<0)yy1=0;
if(yy2<0)yy2=0;
if(yy1>img[1]-1)yy1=img[1]-1;
if(yy2>img[1]-1)yy2=img[1]-1;
steeps=yy2-yy1;
addss=img[0];
location=yy1*img[0];
for(f=0;f<steeps;f++){
img[x+location+3]=r<<16 | g << 8 | b;
location=location+addss;
}
} 




void ilineR(int x,int y,int x2,int y2,int *img,char r,char g,char bc){
long l1=0,l2=0,l3=0,l4=0,l5=0;
int i4=0;
int xx=x;
int yy=y;
int xxx=x2;
int yyy=y2;
int c=0;
int c2=0;
if (xx>xxx){
i4=xxx;
xxx=xx;
xx=i4;
}
if (yy>yyy){
i4=yyy;
yyy=yy;
yy=i4;
}

int i1=xxx-xx;
int i2=yyy-yy;
int i3;
int i5;
int i6;
int i8;
int b=0;
int ty=0;
if (i1>i2){
l1=(long)i1;
l2=(long)i2;
if(l1==0){
l1=1;};
l4=(l2*10000/l1);
l3=0;
i6=0;
c=0;
c2=0;
for(i5=0;i5<i1+1;i5++){
l5=l3/10000;
i3=(int)l5;
Ipixel(xx+i5,y+(i3),img,r,g,bc);
l3=l3+l4;
}
}else{
l1=(long)i1;
l2=(long)i2;
if(l2==0){
l2=1;};
l4=(l1*10000/l2);
l3=0;
i6=0;
c=0;
c2=0;
for(i5=0;i5<i2+1;i5++){
l5=l3/10000;
i3=(int)l5;
Ipixel(xx+i3,y+(i5),img,r,g,bc);
l3=l3+l4;
}
} 
}

void ilineL(int x,int y,int x2,int y2,int *img,char r,char g,char bc){
long l1=0,l2=0,l3=0,l4=0,l5=0;
int i4=0;
int xx=x;
int yy=y;
int xxx=x2;
int yyy=y2;
int c=0;
int c2=0;
if (xx>xxx){
i4=xxx;
xxx=xx;
xx=i4;
}
if (yy<yyy){
i4=yyy;
yyy=yy;
yy=i4;
}

int i1=xxx-xx;
int i2=yy-yyy;
int i3;
int i5;
int i6;
int i8;
int b=0;
int ty=0;
if (i1>i2){
l1=(long)i1;
l2=(long)i2;
if(l1==0){
l1=1;};
l4=(l2*10000/l1);
l3=0;
i6=0;
c=0;
c2=0;
for(i5=0;i5<i1+1;i5++){
l5=l3/10000;
i3=(int)l5;
Ipixel(xx+i5,y-(i3),img,r,g,bc);
l3=l3+l4;
}
}else{
l1=(long)i1;
l2=(long)i2;
if(l2==0){
l2=1;};
l4=(l1*10000/l2);
l3=0;
i6=0;
c=0;
c2=0;
for(i5=0;i5<i2+1;i5++){
l5=l3/10000;
i3=(int)l5;
Ipixel(xx+i3,yy-i5,img,r,g,bc);
l3=l3+l4;
}
} 
}

void iline(int x,int y,int x2,int y2,int *img,char r,char g,char b){
int i=-1;
if(x>x2 && y<y2)i=5;
if(x>x2 && y>y2)i=4;
if(x<x2 && y<y2)i=3;
if(x<x2 && y>y2)i=2;
if(y==y2)i=0;
if(x==x2)i=1;
if (i==0)ihline(x,y,x2,img,r,g,b);
if (i==1)ivline(x,y,y2,img,r,g,b);
if (i==2)ilineL(x,y,x2,y2,img,r,g,b);
if (i==3)ilineR(x,y,x2,y2,img,r,g,b);
if (i==4)ilineR(x2,y2,x,y,img,r,g,b);
if (i==5)ilineL(x2,y2,x,y,img,r,g,b);
}


void iball(int xx,int yy ,int rr,int *img,char rc,char gc,char bcc){
long double rrr=(long double)rr,dx=(long double)xx,dy=(long double)yy,ddddd=0.0,d1=0.0,dd1=0,d=0.0,dd=0.0,ddd=0.0,pi=(long double)PI;
int x=1,y=1,bc=0,c=7,x1=0,y1=0;
long double rrr1=rrr*2;
long double xyr=rrr1*pi*2;
long double rrr2=xyr/2;
for (ddd=0.0;ddd<xyr/2;ddd=ddd+1.0){
dd=dy-rrr1*(cos)(ddd/rrr2*pi);
d=dx+rrr1*(sin)(ddd/rrr2*pi);
ddddd--;
if (ddddd>xyr + 1.0)ddddd=0;
dd1=dy-rrr1*(cos)(ddddd/rrr2*pi);
d1=dx+rrr1*(sin)(ddddd/rrr2*pi);
bc=(int)ddd;
x=(int)d;
y=(int)dd;
x1=(int)d1;
y1=(int)dd1;
ihline(x1,y,x,img,rc,gc,bcc);
}

}

int mouseEvent(){
int xx=0,yy=0;
unsigned char data[3];
int byte=read(MOUSEfile,data,sizeof(data));
if (byte>0){
left=data[0] & 1;
right=data[0] & 2;
middle=data[0] & 4;
xx=(int) data[1];
yy=(int) data[2];
if (xx>127)xx=xx-256;
if (yy>127)yy=yy-256;
yy=-yy;
mouseX=mouseX+xx;
mouseY=mouseY+yy;
if (mouseX>8000) mouseX=0;
if (mouseY>8000) mouseY=0;
if (mouseX>(int)vinfo.xres) mouseX=vinfo.xres;
if (mouseY>(int)vinfo.yres) mouseY=vinfo.yres;
if (mouseX<0) mouseX=0;
if (mouseY<0) mouseY=0;
return -1;
}
return 0;
}


void ioutSide(int y,int *img){
iboxs(0,0,vinfo.xres,y,img,0,255,255);
iboxs(0,y,vinfo.xres,vinfo.yres,img,200,0,0);
}


void icircle(int xx,int yy ,int rr,int *img,char rcc,char gcc, char bcc){
long double rrr=(long double)rr,dx=(long double)xx,dy=(long double)yy,ddddd=0.0,d1=0.0,dd1=0,d=0.0,dd=0.0,ddd=0.0,pi=(long double)PI;
long double xyr=rrr*2;
int x=1,y=1,bc=0,c=7,x1=0,y1=0;
long double rrr1=rrr*2;
long double rrr2=xyr/2;
for (ddd=0.0;ddd<xyr+1.0;ddd=ddd+1.0){
dd=dy-rrr1*(cos)(ddd/rrr2*pi);
d=dx+rrr1*(sin)(ddd/rrr2*pi);
ddddd=ddd+1.0;
if (ddddd>xyr + 1.0)ddddd=0;
dd1=dy-rrr1*(cos)(ddddd/rrr2*pi);
d1=dx+rrr1*(sin)(ddddd/rrr2*pi);
bc=(int)ddd;
x=(int)d;
y=(int)dd;
x1=(int)d1;
y1=(int)dd1;
iline(x,y,x1,y1,img,rcc,gcc,bcc);
}

}





int igpixel(int x,int y,int *img){
int color=-1;
int r=0;
int g=0;
int b=0;
int a=0;
int t=0;
int tt=15;
unsigned short int aa=0;
if (x>0 && y>0 && x<img[0] && y<img[1]){
color=img[img[0]*y+x+3];

}



return (int) color;
} 






void ifffill(int x,int y,int *img,char rc,char gc,char bc){
int color=RGBC(rc,gc,bc);
int i=0;
char b=0;
int xx=x;
int yy=y;
do{
i=igpixel(xx,yy,img);
Ipixel(xx,yy,img,rc,gc,bc);
if (i<0 || i == color || xx < 0){
yy++;
xx=x;
i=igpixel(xx,yy,img);
if (xx==x && i == color)b=1;
}else xx--;
if (yy>img[1])b=1;
}while(b!=1);

i=0;
b=0;
xx=x+1;
yy=y;
do{
i=igpixel(xx,yy,img);
Ipixel(xx,yy,img,rc,gc,bc);
if (i<0 || i == color || xx > img[0]){
yy++;
xx=x+1;
i=igpixel(xx,yy,img);
if (xx==x+1 && i == color)b=1;
}else xx++;
if (yy>img[1])b=1;
}while(b!=1);

i=0;
b=0;
xx=x;
yy=y-1;
do{
i=igpixel(xx,yy,img);
Ipixel(xx,yy,img,rc,gc,bc);
if (i<0 || i == color || xx < 0){
yy--;
xx=x;
i=igpixel(xx,yy,img);
if (xx==x && i == color)b=1;
}else xx--;
if (yy<0)b=1;
}while(b!=1);

i=0;
b=0;
xx=x+1;
yy=y-1;
do{
i=igpixel(xx,yy,img);
Ipixel(xx,yy,img,rc,gc,bc);
if (i<0 || i == color || xx > img[0]){
yy--;
xx=x+1;
i=igpixel(xx,yy,img);
if (xx==x+1 && i == color)b=1;
}else xx++;
if (yy<0)b=1;
}while(b!=1);


}




void IcopyImage(int x,int y, int *img, int *img2){
int r;
int g;
int b;
int ix=0;
int iy=0;
img[2]=vinfo.bits_per_pixel;
for (iy=0;iy<img[1]+1;iy++){
for (ix=0;ix<img[0]+1;ix++){
img[iy*img[0]+ix+3]=igpixel(ix,iy,img2);
}
}
}


void Ipixel16(int x,int y,int *img,int color){
if(x>=0 && x<=img[0] && y>=0 && y<=img[1]) img[x+(y*img[0])+3]=color;
}


void IputImage(int x,int y, int *img, int *img2){
char r;
char g;
char b;
int t=0;
int ix=0;
int iy=0;
int ttt;
if (img2[2]==32){
for (iy=0;iy<img2[1]+1;iy++){
for (ix=0;ix<img2[0]+1;ix++){
ttt=255;
b=(char) ttt & img2[iy*img2[0]+ix+3];
ttt=ttt<<8;
g=(char)((img2[iy*img2[0]+ix+3] & ttt)>>8);
ttt=ttt<<8;
r=(char)((img2[iy*img2[0]+ix+3] & ttt)>>16);
Ipixel(x+ix,y+iy,img,r,g,b);
}
}
}else{
for (iy=0;iy<img2[1]+1;iy++){
for (ix=0;ix<img2[0]+1;ix++){
Ipixel16(x+ix,y+iy,img,img2[iy*img2[0]+ix+3]);
}
}
}



}



void TputImage(int x,int y, int *img,char tr,char tg,char tb){
char r;
char g;
char b;
int t=0;
int ix=0;
int iy=0;
int ttt;
if (img[2]==32){
for (iy=0;iy<img[1]+1;iy++){
for (ix=0;ix<img[0]+1;ix++){
ttt=255;
b=(char) ttt & img[iy*img[0]+ix+3];
ttt=ttt<<8;
g=(char)((img[iy*img[0]+ix+3] & ttt)>>8);
ttt=ttt<<8;
r=(char)((img[iy*img[0]+ix+3] & ttt)>>16);
if (tr!=r && tg!=g && tb!=b) ppixel(x+ix,y+iy,r,g,b);
}
}
}else{
int y=0;
for (iy=0;iy<img[1]+1;iy++){
for (ix=0;ix<img[0]+1;ix++){
if (RGBC(tr,tg,tb)!=img[iy*img[0]+ix+3])ppixel16(x+ix,y+iy,img[iy*img[0]+ix+3]);
}
}
}



}
int *loadArrayMap(char *files){
	char bmid[12];	
	struct arrayMaps AM;
	int *img;
	int *bitm;
	int n=0;
	int nn=0;
	int nnn=0;
	FILE *f1;
	if(files!=NULL){
		f1=fopen(files,"r");
		if(f1!=NULL){
				fseek(f1,0,SEEK_SET);
				fread(bmid,9,1,f1);
				bmid[10]=0;
				if(strcmp(bmid,"MapArray")!=0){
					if(f1!=NULL)fclose(f1);
					return NULL;
				}
				fread(&AM,sizeof(AM),1,f1);
				if(AM.w>641 || AM.h>481 || AM.bits!=32){
					if(f1!=NULL)fclose(f1);
					return NULL;
				}

				img=creatImage(AM.w,AM.h);
				bitm=img+3;
				fread(bitm,AM.w*AM.h*sizeof(int),1,f1);
				fclose(f1);
				return img;
		}
	}
	return NULL;
}
int saveArrayMap(char *files,int *img){
	char bmid[]="MapArray\0\0";	
	struct arrayMaps AM;
	int *bitm;
	int *imgix=img;
	int n=0;
	int nn=0;
	int nnn=0;
	FILE *f1;
	if(files!=NULL){
		f1=fopen(files,"w");
		if(f1!=NULL){
				fseek(f1,0,SEEK_SET);
				fwrite(bmid,9,1,f1);
				fwrite(img,imgix[0]*imgix[1]*sizeof(int)+3*sizeof(int),1,f1);
				fclose(f1);
				return 1;
		}
	}
	return 0;
}


